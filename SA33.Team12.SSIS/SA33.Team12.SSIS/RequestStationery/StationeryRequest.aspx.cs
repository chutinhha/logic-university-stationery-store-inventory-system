using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using SA33.Team12.SSIS.DAL;
using SA33.Team12.SSIS.BLL;
using System.Collections.Specialized;
using System.Diagnostics;

namespace SA33.Team12.SSIS.Test
{
    public partial class StationeryRequest : System.Web.UI.Page
    {
        private RequisitionManager requisitionManager;
        
        private Requisition requisition;
        protected void Page_Load(object sender, EventArgs e)
        {
          
            CancelButton.Visible = false;
            requisitionManager = new RequisitionManager();

            if (!IsPostBack)
            {
               UrgencyDDL.DataSource = requisitionManager.GetAllUrgencies();
               UrgencyDDL.DataTextField = "Name";
               UrgencyDDL.DataValueField = "UrgencyID";
               DataBind();
            }

            if (Session["Requisition"] != null)
            {
                requisition = (Requisition)Session["Requisition"];
            }
            else
            {
                requisition = CreateRequisition();
                Session["Requisition"] = requisition;
            }



            NameValueCollection nv = Request.QueryString;
            string key = string.Empty;
            string val = string.Empty;
            if (nv.HasKeys())
            {
                key = nv.GetKey(0);
                val = nv.Get(0);
            }            

            if (key == "RequestID")
            {                
                requisition = requisitionManager.GetRequisitionByID(Convert.ToInt32(val));
                Panel1.Visible = false;
                Panel2.Visible = false;
                SubmitButton.Visible = false;
                Panel3.Visible = false;
                CancelButton.Visible = true;
                if (requisition != null)
                {
                    if (requisition.ApprovedBy > 0)
                    {
                        RequestItemGridView.AutoGenerateEditButton = false;
                        RequestItemGridView.AutoGenerateDeleteButton = false;
                        
                    }
                }
                else
                {
                    Response.Redirect("~/RequestStationery/StationeryRequest.aspx");
                }
            }

            if (requisition.RequisitionID >= 0 && requisition != null)
            {
                PopulateData(requisition);
            }

        }

        private Requisition CreateRequisition()
        {
            Requisition req = new Requisition();
            User currentUser = Utilities.Membership.GetCurrentLoggedInUser();            
            req.DepartmentID = currentUser.DepartmentID;
            req.DateRequested = DateTime.Now.Date;            
            req.CreatedBy = currentUser.UserID;
            req.RequisitionForm = requisitionManager.GetRequisitionNumber(req);

            return req;
        }

        protected void PopulateData(Requisition requisition)
        {
            List<RequisitionItem> reqItems = null;
            List<SpecialRequisitionItem> splReqItems = null;
            if (requisition.RequisitionID > 0)
            {
                reqItems = requisitionManager.GetAllRequisitionItems(requisition);
                splReqItems = requisitionManager.GetAllSpecialRequisitionItems(requisition);

                if (reqItems.Count > 0)
                {
                    RequestItemGridView.DataSource = reqItems;
                    RequestItemGridView.DataKeyNames = new string[] { "RequisitionItemID" };

                }

                if (splReqItems.Count > 0)
                {
                    SpecialRequestItemGridView.DataSource = splReqItems;
                    SpecialRequestItemGridView.DataKeyNames = new string[] { "SpecialStationeryID" };

                }
                
                DetailsView1.DataSource = reqItems;
                DetailsView2.DataSource = splReqItems;
                DataBind();
            }

            if (requisition.RequisitionID == 0)
            {
                reqItems = requisition.RequisitionItems.ToList<RequisitionItem>();
                splReqItems = requisition.SpecialRequisitionItems.ToList<SpecialRequisitionItem>();

                if (reqItems.Count > 0)
                {
                    RequestItemGridView.DataSource = reqItems;
                    RequestItemGridView.DataKeyNames = new string[] { "RequisitionItemID" };

                }

                if (splReqItems.Count > 0)
                {
                    SpecialRequestItemGridView.DataSource = splReqItems;

                }
                DetailsView1.DataSource = reqItems;
            }
        }

        protected void RequestItemGridView_RowEditing(object sender, GridViewEditEventArgs e)
        {
            RequestItemGridView.EditIndex = e.NewEditIndex;
            RequestItemGridView.DataBind();
        }

        protected void RequestItemGridView_RowUpdating(object sender, GridViewUpdateEventArgs e)
        {
            RequisitionItem reqItem = requisitionManager.GetRequisitionItemsByID(Convert.ToInt32(((TextBox)RequestItemGridView.Rows[e.RowIndex].FindControl("TextBox3")).Text));
            GridViewRow row = RequestItemGridView.Rows[e.RowIndex];
            DropDownList t = (DropDownList)row.FindControl("DropDownList1");
            if (reqItem != null)
            {
                reqItem.StationeryID = Convert.ToInt32(t.Text);
                reqItem.QuantityRequested = Convert.ToInt32(((TextBox)row.FindControl("TextBox2")).Text);
                requisitionManager.UpdateRequisitionItem(reqItem);
                //UtilityFunctions.SendEmail("Update requisition successful.", requisition.RequisitionID + " - Requestion has been updated successfully.", new List<User>());
            }
            else
            {
                if (Session["Requisition"] != null)
                {
                    requisition = (Requisition)Session["Requisition"];
                }
                else
                {
                    requisition = CreateRequisition();
                    Session["Requisition"] = requisition;
                }
                foreach (var req in ((Requisition)Session["Requisition"]).RequisitionItems)
                {
                    if (reqItem.StationeryID == req.StationeryID)
                    {
                        reqItem.QuantityRequested += req.QuantityIssued;
                        requisition.RequisitionItems.Remove(req);
                        requisition.RequisitionItems.Add(reqItem);                      
                        break;
                    }
                }
            }
            RequestItemGridView.EditIndex = -1;
            PopulateData(requisition);
            RequestItemGridView.DataBind();
        }

        protected void RequestItemGridView_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)
        {
            RequestItemGridView.EditIndex = -1;
            RequestItemGridView.DataBind();
        }

        protected void RequestItemGridView_RowDeleting(object sender, GridViewDeleteEventArgs e)
        {

            RequisitionItem reqItem = null;
            Label t = null;
            GridViewRow row = null;
            if (e.RowIndex != 0)
            {
                row = RequestItemGridView.Rows[e.RowIndex];
                t = (Label)row.FindControl("Label3");
            }
            if (t != null)
            {
                reqItem = requisitionManager.GetRequisitionItemsByID(Convert.ToInt32(t.Text));
            }
            if (reqItem != null)
            {
                requisitionManager.DeleteRequisitionItem(requisitionManager.GetRequisitionItemsByID(reqItem.RequisitionItemID));                   
            }
            else
            {
                foreach (var req in ((Requisition)Session["Requisition"]).RequisitionItems)
                {
                    if (Convert.ToInt32(t.Text) == req.RequisitionItemID)
                    {
                        requisitionManager.DeleteRequisitionItem(reqItem);
                    }
                }
            }

            PopulateData(requisition);
            DataBind();
        }

        protected void DetailsView1_ItemInserting(object sender, DetailsViewInsertEventArgs e)
        {
            RequisitionItem item = new RequisitionItem();

            item.StationeryID = Convert.ToInt32(((DropDownList)DetailsView1.FindControl("DropDownList3")).SelectedValue);
            item.QuantityIssued = 0;
            item.Price = 0;
            if (((TextBox)DetailsView1.FindControl("TextBox5")).Text != string.Empty)
            {
                item.QuantityRequested = Convert.ToInt32(((TextBox)DetailsView1.FindControl("TextBox5")).Text);
            }


            if (Session["Requisition"] != null)
            {
                requisition = (Requisition)Session["Requisition"];
            }
            else
            {
                requisition = CreateRequisition();
                Session["Requisition"] = requisition;
            }

            if (requisition.RequisitionItems.Count < 1)
            {
                requisition.RequisitionItems.Add(item);
            }

            else
            {
                foreach (var req in requisition.RequisitionItems)
                {
                    if (item.StationeryID == req.StationeryID)
                    {
                        item.QuantityRequested += req.QuantityRequested;
                        requisition.RequisitionItems.Remove(req);
                        requisition.RequisitionItems.Add(item);
                        break;
                    }
                    else
                    {
                        requisition.RequisitionItems.Add(item);
                        break;
                    }
                }
            }

            PopulateData(requisition);
            DataBind();

        }

        protected void DetailsView2_ItemInserting(object sender, DetailsViewInsertEventArgs e)
        {
            SpecialRequisitionItem item = new SpecialRequisitionItem();
            item.QuantityIssued = 0;
            item.Price = 0;

            if (((TextBox)DetailsView2.FindControl("TextBox1")).Text != string.Empty)
            {
                item.Name = ((TextBox)DetailsView2.FindControl("TextBox1")).Text;
            }

            if (((TextBox)DetailsView2.FindControl("TextBox2")).Text != string.Empty)
            {
                item.Description = ((TextBox)DetailsView2.FindControl("TextBox2")).Text;
            }

            if (((TextBox)DetailsView2.FindControl("TextBox3")).Text != string.Empty)
            {
                item.QuantityRequested = Convert.ToInt32(((TextBox)DetailsView2.FindControl("TextBox3")).Text);
            }

            if (((TextBox)DetailsView2.FindControl("TextBox4")).Text != string.Empty)
            {
                item.RemarkByRequester = ((TextBox)DetailsView2.FindControl("TextBox4")).Text;
            }

            if (Session["Requisition"] != null)
            {
                requisition = (Requisition)Session["Requisition"];
            }
            else
            {
                requisition = CreateRequisition();
                Session["Requisition"] = requisition;
            }

            requisition.SpecialRequisitionItems.Add(item);

            PopulateData(requisition);
            DataBind();
        }

        protected void SubmitButton_Click(object sender, EventArgs e)
        {
            try
            {
                //CatalogManager cManager = new CatalogManager();
                //foreach (var item in requisition.SpecialRequisitionItems)
                //{
                //    SpecialStationery temp = new SpecialStationery()
                //    {
                //        ItemCode = "s001",
                //      Description = item.Name,
                //      Quantity = item.QuantityRequested,
                //      CreatedBy = 1,
                //      ModifiedBy = 1,
                //      CategoryID = 1,
                //      DateCreated = DateTime.Now.Date,
                //      UnitOfMeasure = "box",
                //      IsApproved = false
                //    };

                //    item.SpecialStationery = temp;
                //    //item.SpecialStationeryID = temp.SpecialStationeryID;
                requisition.UrgencyID = Convert.ToInt32(UrgencyDDL.SelectedValue);
                Requisition temp = requisitionManager.CreateRequisition(requisition);
                //UtilityFunctions.SendEmail(temp.RequisitionID + " - Requisition Created Successfully ", "The requisition has been created successfully. You can view the status of requisition from the below link.<br /> <a href=>", new List<DAL.User>());
                Response.Redirect("~/RequestStationery/StationeryRequest.aspx?RequestID=" + temp.RequisitionID);

                
            }
            catch (Exception)
            {
                
                throw;
            }
            
        }

        protected void CancelButton_Click(object sender, EventArgs e)
        {
            try
            {
                requisitionManager.CancelRequisition(requisition);
                CancelButton.Visible = false;
                RequestItemGridView.AutoGenerateDeleteButton = false;
                RequestItemGridView.AutoGenerateEditButton = false;
                //UtilityFunctions.SendEmail("Cancelled Requisition - " + requisition.RequisitionID, "Your request has been cancelled successfully", new List<User>());
            }
            catch (Exception)
            {
                
                throw;
            }
        }

    }
}